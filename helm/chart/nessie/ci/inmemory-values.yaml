---
versionStoreType: IN_MEMORY
log:
  level: INFO
  console:
    enabled: true
    json: false
  file:
    enabled: true
    json: true
    threshold: WARN
    rotation:
      maxFileSize: 1Mi
      maxBackupIndex: 5
      fileSuffix: ~
    storage:
      className: standard
      size: 100Mi
  categories:
    org:
      projectnessie: DEBUG
    io.smallrye.config: DEBUG
tracing:
  enabled: true
metrics:
  enabled: true
  tags:
    service: nessie
    environment: dev
podLabels:
  app: nessie-{{ .Release.Namespace }}-{{ .Values.versionStoreType }}
podAnnotations:
  app: nessie-{{ .Release.Namespace }}-{{ .Values.versionStoreType }}
catalog:
  enabled: true
  iceberg:
    # the sample bucket cannot be checked
    objectStoresHealthCheckEnabled: false
    defaultWarehouse: warehouse1
    configDefaults:
      default1: value1
      default2: value2
    configOverrides:
      override1: value1
      override2: value2
    warehouses:
    - name: warehouse1
      location: "s3://bucket1.prod-us/warehouse-{{ .Release.Namespace }}"
      configDefaults:
        default1: value11
        default2: value22
      configOverrides:
        override1: value11
        override2: value22
  storage:
    s3:
      transport:
        readTimeout: PT1M
        expectContinueEnabled: false
      defaultOptions:
        region: us-west-2
        endpoint: s3.amazonaws.com
        requestSigningEnabled: false
        pathStyleAccess: false
        serverIam:
          enabled: false
        clientIam:
          enabled: true
          statements:
            - >-
              {
                "Effect": "Allow",
                "Action": "s3:GetObject",
                "Resource": "arn:aws:s3:::bucket1.{{ .Release.Namespace }}/*"
              }
            - >-
              {
                "Effect": "Allow",
                "Action": "s3:PutObject",
                "Resource": "arn:aws:s3:::bucket1.{{ .Release.Namespace }}/*"
              }
      buckets:
        - name: bucket1.{{ .Release.Namespace }}
          endpoint: prod-us.s3.amazonaws.com
          region: us-east-1
        - name: bucket2.{{ .Release.Namespace }}
          endpoint: prod-us2.s3.amazonaws.com
          region: us-east-2
    gcs:
      transport:
        readTimeout: PT1M
        maxAttempts: 0
      defaultOptions:
        host: https://storage.googleapis.com
      buckets:
      - name: bucket1.{{ .Release.Namespace }}
        projectId: project-id
      - name: bucket2.{{ .Release.Namespace }}
        projectId: project-id

    adls:
      transport:
        readBlockSize: 4096
        writeBlockSize: 4096
      advancedConfig:
        flat1.flat2.key1: value1
        nested1:
          nested2:
            key2: value2
            key3: value3
      defaultOptions:
        endpoint: https://account-default.azuredatalakestore.net
        maxRetries: 3
        retryInterval: PT5S
        retryPolicy: EXPONENTIAL_BACKOFF
        retryDelay: PT1S
        authType: NONE
      filesystems:
      - name: filesystem1-{{ .Release.Namespace }}
        endpoint: https://account1.azuredatalakestore.net
        maxRetries: 3
        retryInterval: PT5S
        retryPolicy: EXPONENTIAL_BACKOFF
        retryDelay: PT1S
      - name: filesystem2-{{ .Release.Namespace }}
        endpoint: https://account2.azuredatalakestore.net
        maxRetries: 3
        retryInterval: PT5S
        retryPolicy: EXPONENTIAL_BACKOFF
        retryDelay: PT1S

livenessProbe:
  initialDelaySeconds: 2
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 3
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 3

extraInitContainers:
  - name: hello-world
    image: bash
    imagePullPolicy: Always
    command: ['sh', '-c', 'echo "hello world"']
