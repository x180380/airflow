versionStoreType: JDBC2

jdbc:
  jdbcUrl: jdbc:h2:mem:nessie;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
  secret:
    name: datasource-creds
    username: username
    password: password

catalog:

  enabled: true

  iceberg:

    warehouses:
    - name: warehouse1
      location: s3://bucket1/
      configDefaults:
        default1: value1
      configOverrides:
        override1: ov1
    objectStoresHealthCheckEnabled: false

  storage:

    s3:
      defaultOptions:
        accessKeySecret:
          name: default-creds
          awsAccessKeyId: defaultAccessKeyId
          awsSecretAccessKey: defaultSecretAccessKey
      buckets:
      - name: bucket1
        endpoint: "https://bucket1.s3.amazonaws.com"
        accessKeySecret:
          name: awscreds
          awsAccessKeyId: aws_access_key_id
          awsSecretAccessKey: aws_secret_access_key
      - name: bucket2
        endpoint: "https://bucket2.s3.amazonaws.com"
        accessKeySecret:
          name: awscreds2
          awsAccessKeyId: aws_access_key_id2
          awsSecretAccessKey: aws_secret_access_key2

    gcs:
      defaultOptions:
        authCredentialsJsonSecret:
          name: gcs-json
          key: gcsJsonKey
        oauth2TokenSecret:
          name: gcs-oauth2-name
          token: gcsOauth2Token
          expiresAt: gcsOauth2TokenExpires
      buckets:
      - name: bucket1
        authType: ACCESS_TOKEN
        oauth2TokenSecret:
          name: gcs-creds
          token: token
          expiresAt: expiresAt
        authCredentialsJsonSecret:
          name: gcs-json-bucket
          key: gcsJsonKeyBucket
      - name: bucket2
        authType: ACCESS_TOKEN
        oauth2TokenSecret:
          name: gcs-creds2
          token: token2
          expiresAt: expiresAt2
        authCredentialsJsonSecret:
          name: gcs-json-bucket2
          key: gcsJsonKeyBucket2

    adls:
      defaultOptions:
        accountSecret:
          name: adls-name
          accountName: adlsaccountName
          accountKey: adlsaccountKey
        sasTokenSecret:
          name: adls-sas
          sasToken: adlsTOKEN
      filesystems:
      - name: filesystem1
        endpoint: http://localhost/adlsgen2/bucket
        accountSecret:
          name: adls-account-secret
          accountName: accountName
          accountKey: accountKeyRef
        sasTokenSecret:
          name: adls-sas-fs
          sasToken: adlsTokenFs
      - name: filesystem2
        endpoint: http://localhost/adlsgen2/bucket2
        accountSecret:
          name: adls-account-secret2
          accountName: accountName2
          accountKey: accountKeyRef2
        sasTokenSecret:
          name: adls-sas-fs2
          sasToken: adlsTokenFs2
